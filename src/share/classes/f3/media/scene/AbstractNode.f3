package f3.media.scene;
import f3.math.*;
import org.f3.runtime.*;

// A User-defined Node in the 3d spatial affine transform hierarchy

public abstract class AbstractNode is Node 
{
    public const pathFactory is Shape2D.Path2DFactory = the Shape2D.Path2DFactory;
    public const layoutEngine is Text.LayoutEngine = the Text.LayoutEngine;
    public const effectLoader is CGEffectLoader = the CGEffectLoader;
    public const imageLoader is ImageLoader = the ImageLoader;
    protected var internalContent is Node;
    override var contentBounds = bind internalContent.bounds;

    override function updateParent to () 
    {
        preupdate();
	internalContent.setParent(this);
	internalContent.updateParent();
	update();
    }

    override public function foldLeft of b
	from (z is b, f is function from (b, Node) to b) 
	to b
    {
	internalContent.foldLeft(f(z, this), f);
    }

    override public function foldRight of b
	from (z is b, f is function from (Node, b) to b) 
	to b
    {
	const r = 
	    internalContent.foldRight(z, f);
	f(this, r);
    }

    override function lookup from (id is String) to Node 
    {
        if this.id  == id then this else internalContent.lookup(id)
    }

}
