package f3.media.input;
import f3.util.*;
import f3.media.scene.*;

public interface Focusable is Focuser {
    override function getTargetOfFocus to Focusable { this }
    public readonly var focused is Boolean;
    public function acceptFocus to Boolean { obFocus.onNext(focused = true); focused }
    public function loseFocus to Boolean { obFocus.onNext(focused = false); focused }
    public function getKeyboardInputHandler to KeyboardInputHandler 
    {
	if (this is KeyboardInputHandler) {
            return this as KeyboardInputHandler;
        }
        return null;
    }

    var keyDown is Subject of KeyboardEvent;
    var keyUp is Subject of KeyboardEvent;
    var keyInput is Subject of KeyboardEvent;

    var obFocus is Subject of Boolean;

    public function observeKeyDown to Subject of KeyboardEvent 
    {
	if (keyDown == null) 
	    then keyDown = Subject of KeyboardEvent {}
	else keyDown;
	
    }
    public function observeKeyUp to Subject of KeyboardEvent 
    {
	if (keyUp == null) 
	    then keyUp = Subject of KeyboardEvent {}
	else keyUp;
    }

    public function observeKeyInput to Subject of KeyboardEvent 
    {
	if (keyInput == null) 
	    then keyInput = Subject of KeyboardEvent {}
	else keyInput;
    }

    public function observeFocused to Observable of Boolean 
    {
        if (obFocus == null) then obFocus = Subject of Boolean {} else obFocus;
    }

    var attachment is Disposable;

    public function attachTo from (n is Node) to ()
    {
        attachment.dispose();
        attachment = n.observeMouseDown().subscribe(function from (e is MouseEvent) to () {
                e.scene.setFocus(this);
            });
    }
}