package f3.util;

public const filterable = Filterable of [] {
    override public function filter of a from (xs is a[], f is function from a to Boolean) to a[] 
    {
        foreach (x in xs where f(x)) x;
    }
}

public function of b indexOf from (xs is (..b)[], y is b) to Integer {
    for (x in xs) {
	if (x == y) {
	    return indexof x;
	}
    }
    return -1;
}

public function sort of a 
    from (xs is (..a)[], 
	  comparator is java.util.Comparator of a..) 
    to (..a)[] 
{
    if (xs.size() <= 1) then xs else org.f3.runtime.sequence.Sequences.sort of a(xs, comparator);
}      

public function sort of (a is java.lang.Comparable) 
    from (xs is (..a)[]) 
    to (..a)[] 
{
    if (xs.size() <= 1) then xs else org.f3.runtime.sequence.Sequences.sort of a(xs);
}      