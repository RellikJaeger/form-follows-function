package f3.util;

public abstract class Ordering of a 
{
    public abstract function compare 
	from (x is a, y is a) 
	to Comparison;

    public function max from (x is a, y is a) to a 
    {
	if (compare(x, y) == Comparison.Less) then y else x
    }

    public function min from (x is a, y is a) to a 
    {
	if (compare(x, y) == Comparison.Less) then x else y
    }
}

public class ComparableOrdering of (a is java.lang.Comparable of a), is Ordering of a 
{
    override function compare 
	from (x is a, y is a) 
	to Comparison 
    {
	Comparison.fromInteger(x.compareTo(y))
    }
}

public const DoubleOrdering = ComparableOrdering of Double {}
public const NumberOrdering = ComparableOrdering of Number {}
public const LongOrdering = ComparableOrdering of Long {}
public const IntegerOrdering = ComparableOrdering of Integer {}
public const ShortOrdering = ComparableOrdering of Short {}
public const ByteOrdering = ComparableOrdering of Byte {}
public const CharacterOrdering = ComparableOrdering of Character {}

