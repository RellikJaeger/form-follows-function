package f3.math;
import org.f3.runtime.*;
import java.lang.Math;

public const <<0>> = new Tuple3(0, 0, 0);
public const <<1>> = new Tuple3(1, 1, 1);

public class Tuple3 is F3Value
{
    public const x is Number;
    public const y is Number;
    public const z is Number;

    override public function equals from (obj is Object) to Boolean 
    {
	obj is Tuple3 and {
	    const v = obj as Tuple3;
	    x == v.x and 
	    y == v.y and
	    z == v.z
	}
    }

    public function + from (n is Tuple3) to Tuple3 
    {
	Tuple3 {
	    x: x + n.x;
	    y: y + n.y;
	    z: z + n.z;
	}
    }

    public function - from (n is Tuple3) to Tuple3 
    {
	Tuple3 {
	    x: x - n.x;
	    y: y - n.y;
	    z: z - n.z;
	}
    }

    public function * from (n is Tuple3) to Tuple3 
    {
	Tuple3 {
	    x: x * n.x;
	    y: y * n.y;
	    z: z * n.z;
	}
    }

    public function / from (n is Tuple3) to Tuple3 
    {
	Tuple3 {
	    x: x / n.x;
	    y: y / n.y;
	    z: z / n.z;
	}
    }

    public function * from (n is Number) to Tuple3 
    {   
    	if n == 0 then <<0>> else if n == 1 then this else
	Tuple3 { 
	    x: x*n;
	    y: y*n;
	    z: z*n;
	}
    }

    public function lengthSquared to Number 
    {
	x*x + 
        y*y +
	z*z    
    }

    public function length to Number
    {
	Math.sqrt(lengthSquared());
    }

    override function toString to String 
    {
	"\{ x: {x}, y: {y}, z: {z} \}"
    }

    public function get from (i is Integer) to Number 
    {
	if (i == 0) then x else if i == 1 then y else if i == 2 then z else 0.0;
    }
}

public static def TYPE_INFO is TypeInfo of ..Tuple3 = 
       org.f3.runtime.TypeInfo.makeAndRegisterTypeInfo(Tuple3.<<0>>);